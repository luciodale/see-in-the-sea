---
import {
  getCategoryName,
  getLangFromUrl,
  getLocalizedPath,
  useTranslations,
} from '@/i18n';
import { getCategoriesByContestId, getJudgesByContestId } from './queries';

type Props = {
  contestTitle: string;
  contestId: string;
  activeCategoryId?: string;
};

const { contestTitle, contestId, activeCategoryId } = Astro.props;
const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

if (!Astro.locals.runtime.env.DB) {
  throw new Error('DB is not available');
}

const contestJudges = await getJudgesByContestId(
  Astro.locals.runtime.env.DB,
  contestId
);

const contestCategories = await getCategoriesByContestId(
  Astro.locals.runtime.env.DB,
  contestId
);
---

<div class="space-y-10">
  <!-- Contest Title -->
  <div class="space-y-4 sm:space-y-2">
    <div class="text-center">
      <h1 class="text-5xl font-thin text-gray-50 uppercase">
        {contestTitle}
      </h1>
    </div>
    <ul
      class="text-lg font-semibold flex flex-col sm:gap-4 sm:flex-row items-center justify-center text-gray-300"
    >
      {contestJudges.map(judge => <li>{judge.fullName}</li>)}
    </ul>
  </div>

  <!-- Categories -->
  <div class="flex flex-wrap justify-center gap-4">
    <div class="group relative py-2">
      <a
        href={getLocalizedPath(`contest/${contestId}`, currentLang)}
        class={`category-button ${
          !activeCategoryId
            ? 'category-button--active'
            : 'category-button--inactive'
        }`}
      >
        <span class="text-lg font-light tracking-wide uppercase">
          {t('category.winners-only')}
        </span>
      </a>
    </div>

    {
      contestCategories.map(category => {
        const isActive = activeCategoryId === category.id;
        return (
          <div class="group relative py-2">
            <a
              href={getLocalizedPath(
                `contest/${contestId}/${category.id}`,
                currentLang
              )}
              class={`category-button ${
                isActive
                  ? 'category-button--active'
                  : 'category-button--inactive'
              }`}
            >
              <span class="text-lg font-light tracking-wide uppercase">
                {getCategoryName(category.id, category.name, currentLang)}
              </span>
            </a>
          </div>
        );
      })
    }
  </div>
</div>
